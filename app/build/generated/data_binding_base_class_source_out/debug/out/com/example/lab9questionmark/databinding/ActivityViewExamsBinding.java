// Generated by view binder compiler. Do not edit!
package com.example.lab9questionmark.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lab9questionmark.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityViewExamsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button BackButton2;

  @NonNull
  public final EditText examNoBox;

  @NonNull
  public final EditText infoBox;

  @NonNull
  public final Button nextButton;

  @NonNull
  public final Button prevButton;

  @NonNull
  public final Button removeButton;

  private ActivityViewExamsBinding(@NonNull ConstraintLayout rootView, @NonNull Button BackButton2,
      @NonNull EditText examNoBox, @NonNull EditText infoBox, @NonNull Button nextButton,
      @NonNull Button prevButton, @NonNull Button removeButton) {
    this.rootView = rootView;
    this.BackButton2 = BackButton2;
    this.examNoBox = examNoBox;
    this.infoBox = infoBox;
    this.nextButton = nextButton;
    this.prevButton = prevButton;
    this.removeButton = removeButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityViewExamsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityViewExamsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_view_exams, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityViewExamsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.BackButton2;
      Button BackButton2 = ViewBindings.findChildViewById(rootView, id);
      if (BackButton2 == null) {
        break missingId;
      }

      id = R.id.examNoBox;
      EditText examNoBox = ViewBindings.findChildViewById(rootView, id);
      if (examNoBox == null) {
        break missingId;
      }

      id = R.id.infoBox;
      EditText infoBox = ViewBindings.findChildViewById(rootView, id);
      if (infoBox == null) {
        break missingId;
      }

      id = R.id.nextButton;
      Button nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.prevButton;
      Button prevButton = ViewBindings.findChildViewById(rootView, id);
      if (prevButton == null) {
        break missingId;
      }

      id = R.id.removeButton;
      Button removeButton = ViewBindings.findChildViewById(rootView, id);
      if (removeButton == null) {
        break missingId;
      }

      return new ActivityViewExamsBinding((ConstraintLayout) rootView, BackButton2, examNoBox,
          infoBox, nextButton, prevButton, removeButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
